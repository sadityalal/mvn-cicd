apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: java-app
  name: sonarqube-app
  labels:
    app: sonarqube-app
    env: test
spec:
  replicas: 1   # SonarQube is stateful, better keep 1 replica unless using clustering edition
  selector:
    matchLabels:
      app: sonarqube-app
      env: test
  template:
    metadata:
      labels:
        app: sonarqube-app
        env: test
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:community
        ports:
        - containerPort: 9000
          name: sonarqube-port
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 2Gi
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 20
        volumeMounts:
        - mountPath: /mnt/data/data
          name: sonarqube-data
          subPath: data
        - mountPath: /mnt/data/extensions
          name: sonarqube-data
          subPath: extensions
        - mountPath: /mnt/data/logs
          name: sonarqube-data
          subPath: logs
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: sonar-ready
                operator: "In"
                values:
                - "true"
      tolerations:
      - key: sonar-ready
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  namespace: java-app
  name: sonarqube-svc
spec:
  selector:
    app: sonarqube-app
    env: test
  ports:
  - port: 9000
    targetPort: 9000
    nodePort: 30090
    protocol: TCP
  type: NodePort

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: /mnt/data/
    type: DirectoryOrCreate
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: sonar-ready
          operator: In
          values:
            - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: java-app
  name: sonarqube-pvc
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  volumeName: sonarqube-pv
